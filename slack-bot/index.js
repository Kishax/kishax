const GatherSlackBot = require("./src/GatherSlackBot");

// „É°„Ç§„É≥ÂÆüË°åÈñ¢Êï∞
async function main() {
  console.log("üöÄ Gather Slack Bot Ëµ∑Âãï‰∏≠...");
  console.log(`üìÖ Ëµ∑ÂãïÊôÇÂàª: ${new Date().toLocaleString("ja-JP")}`);

  const bot = new GatherSlackBot();

  // Ê≠£Â∏∏ÁµÇ‰∫ÜÊôÇ„ÅÆÂá¶ÁêÜ
  const gracefulShutdown = async (signal) => {
    console.log(`\nüõë ${signal} Âèó‰ø°: BotÂÅúÊ≠¢‰∏≠...`);
    await bot.disconnect();
    process.exit(0);
  };

  process.on("SIGINT", () => gracefulShutdown("SIGINT"));
  process.on("SIGTERM", () => gracefulShutdown("SIGTERM"));

  // Êú™Âá¶ÁêÜ„Ç®„É©„Éº„ÅÆ„Éè„É≥„Éâ„É™„É≥„Ç∞
  process.on("unhandledRejection", (reason, promise) => {
    console.error("Êú™Âá¶ÁêÜ„ÅÆPromiseÊãíÂê¶:", reason);
    bot.slackNotifier?.notifyUnhandledError(reason);
  });

  process.on("uncaughtException", (error) => {
    console.error("Êú™Âá¶ÁêÜ„ÅÆ‰æãÂ§ñ:", error);
    bot.slackNotifier?.notifyCriticalError(error.message);
    process.exit(1);
  });

  try {
    // BotÊé•Á∂öÈñãÂßã
    await bot.connect();

    // Ë®≠ÂÆö„Å´Âü∫„Å•„ÅÑ„Å¶„Çπ„ÉÜ„Éº„Çø„ÇπÂ†±Âëä„ÇíÈñãÂßã
    bot.startStatusReporting();

    // 30ÂàÜ„Åî„Å®„Å´„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
    setInterval(
      () => {
        bot.healthCheck();
      },
      30 * 60 * 1000,
    );

    console.log("üöÄ Gather Slack Bot „ÅåÊ≠£Â∏∏„Å´Ëµ∑Âãï„Åó„Åæ„Åó„ÅüÔºÅ");
    console.log("üí° ÂÅúÊ≠¢„Åô„Çã„Å´„ÅØ: Ctrl+C");
  } catch (error) {
    console.error("‚ùå BotËµ∑Âãï„Ç®„É©„Éº:", error);
    await bot.slackNotifier?.notifyStartupError(error.message);
    process.exit(1);
  }
}

// „É°„Ç§„É≥Èñ¢Êï∞ÂÆüË°å
if (require.main === module) {
  main().catch((error) => {
    console.error("‚ùå „É°„Ç§„É≥Èñ¢Êï∞„Ç®„É©„Éº:", error);
    process.exit(1);
  });
}

module.exports = { GatherSlackBot };
