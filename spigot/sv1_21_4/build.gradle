plugins {
  alias(libs.plugins.shadow)
}

sourceCompatibility = 21
targetCompatibility = 21

configurations {
  shadowImpl
  compileOnly.extendsFrom shadowImpl
}

dependencies {
  compileOnly 'org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT'
  //compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'
  shadowImpl 'net.coobird:thumbnailator:0.4.20'
  shadowImpl 'com.google.zxing:core:3.4.1'
  shadowImpl 'com.google.zxing:javase:3.4.1'
  shadowImpl 'net.kyori:adventure-api:4.17.0'
  shadowImpl 'net.kyori:adventure-platform-bukkit:4.3.4'
  compileOnly project(':spigot:svcore')
  shadowImpl project(':common')
}

build {
  dependsOn(':common:build')
  dependsOn(':spigot:svcore:build')
}

shadowJar {
  configurations = [project.configurations.shadowImpl]
  archiveBaseName.set('FMC-Spigot')
  archiveClassifier.set('')
  archiveVersion.set('1.21.4')
  from(project(':spigot:svcore').sourceSets.main.output)
  exclude('META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
}

processResources {
  from("$rootDir/spigot/src/main/resources") {
    include '**/*'
  }
  filesMatching('**/plugin.yml') {
    expand(
      project: project,
      projectName: project.name,
      projectVersion: project.version,
      projectDescription: project.property('description'),
      projectGroup: project.group,
      groupId: project.group,
      projectHP: project.property('hp'),
      projectAPIVersion: 1.20
    )
  }
}

tasks.build {
  dependsOn tasks.shadowJar
}
