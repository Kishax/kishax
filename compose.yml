services:
  mysql:
    image: mysql:8.0
    container_name: kishax-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mc}
      MYSQL_USER: ${MYSQL_USER:-mcuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/data/TABLES.sql:/docker-entrypoint-initdb.d/01-tables.sql
      - ./docker/data/init-seeds.sh:/docker-entrypoint-initdb.d/02-init-seeds.sh
      - ./docker/data/seeds:/docker-entrypoint-initdb.d/seeds
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_PASSWORD:-password}",
        ]
      timeout: 10s
      retries: 5
      interval: 30s

  redis:
    image: redis:7-alpine
    container_name: kishax-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Tokyo
    volumes:
      - redis_data:/data
    # not portforwarded: default 6379 in only internal container network
    # ports:
    #   - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kishax-server:
    build: .
    container_name: kishax-minecraft
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mc}
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-mcuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      SPIGOT_MEMORY: ${SPIGOT_MEMORY:-2G}
      VELOCITY_MEMORY: ${VELOCITY_MEMORY:-1G}
      CONFIRM_URL: ${CONFIRM_URL:-http://localhost:3000/mc/auth}
      HOME_SERVER_NAME: ${HOME_SERVER_NAME:-spigot}
      HOME_SERVER_IP: ${HOME_SERVER_IP:-127.0.0.1}
      # AWS Configuration
      AWS_REGION: ${AWS_REGION:-ap-northeast-1}
      MC_WEB_SQS_ACCESS_KEY_ID: ${MC_WEB_SQS_ACCESS_KEY_ID}
      MC_WEB_SQS_SECRET_ACCESS_KEY: ${MC_WEB_SQS_SECRET_ACCESS_KEY}
      TO_WEB_QUEUE_URL: ${TO_WEB_QUEUE_URL}
      TO_MC_QUEUE_URL: ${TO_MC_QUEUE_URL}
      TO_DISCORD_QUEUE_URL: ${TO_DISCORD_QUEUE_URL}
      # Redis Configuration
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      REDIS_CONNECTION_TIMEOUT: ${REDIS_CONNECTION_TIMEOUT:-5000}
      REDIS_COMMAND_TIMEOUT: ${REDIS_COMMAND_TIMEOUT:-3000}
      # Queue Configuration
      QUEUE_MODE: ${QUEUE_MODE:-MC}
      SQS_WORKER_ENABLED: ${SQS_WORKER_ENABLED:-true}
      SQS_WORKER_POLLING_INTERVAL_SECONDS: ${SQS_WORKER_POLLING_INTERVAL_SECONDS:-5}
      SQS_WORKER_MAX_MESSAGES: ${SQS_WORKER_MAX_MESSAGES:-10}
      SQS_WORKER_WAIT_TIME_SECONDS: ${SQS_WORKER_WAIT_TIME_SECONDS:-20}
      SQS_WORKER_VISIBILITY_TIMEOUT_SECONDS: ${SQS_WORKER_VISIBILITY_TIMEOUT_SECONDS:-30}
      AUTH_API_URL: ${AUTH_API_URL:-http://host.docker.internal:8080}
      AUTH_API_KEY: ${AUTH_API_KEY:-local-dev-api-key}
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

    volumes:
      - minecraft_data:/mc/spigot/world
      - minecraft_data_nether:/mc/spigot/world_nether
      - minecraft_data_the_end:/mc/spigot/world_the_end
      - velocity_data:/mc/velocity
      - server_images:/mc/server/images
    ports:
      - "25565:25565" # Spigot server port
      - "25577:25577" # Velocity proxy port
    stdin_open: true
    tty: true

volumes:
  mysql_data:
  minecraft_data:
  minecraft_data_nether:
  minecraft_data_the_end:
  velocity_data:
  server_images:
  redis_data:
