import net.fabricmc.loom.task.RemapJarTask

plugins {
    alias(libs.plugins.shadow)
    alias(libs.plugins.loom)
}

configurations {
	shadowImpl
	compileOnly.extendsFrom shadowImpl
}

dependencies {
	minecraft 'com.mojang:minecraft:1.20.4'
	mappings 'net.fabricmc:yarn:1.20.4+build.3:v2'
	modImplementation 'net.fabricmc:fabric-loader:0.15.11'
	modImplementation 'net.fabricmc.fabric-api:fabric-api:0.97.1+1.20.4'
	shadowImpl project(':common')
}

processResources {
	filesMatching('**/fabric.mod.json') {
	    expand(
	        project: project,
	        projectName: project.name,
	        projectVersion: project.version,
	        projectDescription: project.property('description'),
	        projectGroup: project.group,
	        groupId: project.group,
	        projectHP: project.property('hp'),
	        projectSource: project.property('source')
	    )
	}
	exclude('assets/minecraft/**') 
}

shadowJar {
	configurations = [project.configurations.shadowImpl]
	archiveBaseName.set('FMC-Fabric')
	archiveClassifier.set('')
	archiveVersion.set('core-shaded')
	dependencies {
		exclude(dependency('com.google.guava:.*'))
		exclude(dependency('org.slf4j:slf4j-simple'))
		exclude(dependency('org.apache.logging.log4j:log4j-slf4j2-impl'))
	}
	exclude('/mappings/*')
	exclude('META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn tasks.shadowJar
    input.set(tasks.shadowJar.archiveFile.get().asFile)
    inputFile.set(tasks.shadowJar.archiveFile.get().asFile)
    archiveFileName.set('FMC-Fabric-core-remapped.jar')
}

tasks.assemble.dependsOn tasks.remappedShadowJar

artifacts {
	archives remappedShadowJar
	shadow shadowJar
}
	